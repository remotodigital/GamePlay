material textured
{
    u_worldViewProjectionMatrix = WORLD_VIEW_PROJECTION_MATRIX
    u_inverseTransposeWorldViewMatrix = INVERSE_TRANSPOSE_WORLD_VIEW_MATRIX
    u_ambientColor = SCENE_AMBIENT_COLOR
    u_lightColor = SCENE_LIGHT_COLOR
    u_lightDirection = SCENE_LIGHT_DIRECTION

    sampler u_diffuseTexture
    {
        mipmap = true
        wrapS = CLAMP
        wrapT = CLAMP
        minFilter = LINEAR_MIPMAP_LINEAR
        magFilter = LINEAR
    }

    renderState
    {
        cullFace = true
        depthTest = true
    }

    technique
    {
        pass
        {
            vertexShader = res/shaders/textured.vert
            fragmentShader = res/shaders/textured.frag
        }
    }
}

material sphere : textured
{
    sampler u_diffuseTexture
    {
        path = res/png/dirt.png
    }
}

material box : textured
{
    sampler u_diffuseTexture
    {
        path = res/png/crate.png
    }
}
